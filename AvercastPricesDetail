WITH 

TotalQuant AS(

SELECT
SUM(sidd.InvoicedQuantity) 'GroupQuant'
,sidd.Product 'ProductNumber'
,sidd.SalesSite 'Site'
,bpc.BillToCustCategory 'Category'
,ISNULL(BG.BuyingGroup,'') 'GroupedBuyingGroup'
FROM MES.SalesInvoiceDetail sidd
LEFT JOIN dim.Customer bpc ON sidd.BillToCustomer = bpc.CustomerNumber
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
INNER JOIN DIM.Product itm ON sidd.Product = itm.ProductReference
WHERE sidd.invoicedate>  dateadd(year,-1,getdate())
AND sidd.InvoicedQuantity>0
AND itm.productstatus <>'Obsolete'
Group by sidd.Product,sidd.SalesSite,bpc.BillToCustCategory,BG.BuyingGroup

)

,Invoiced AS(

SELECT
SUM(sidd.InvoicedQuantity) 'InvoicedQuantity'
,AVG(sidd.NetPrice) 'NetPrice'
,AVG(sidd.DiscountChargeValue) 'DiscountChargeValue'
,sidd.Product 'ProductNumber'
,sih.currency
,sidd.SalesSite 'Site'
,sidd.BillToCustomer
FROM MES.SalesInvoiceDetail sidd
INNER JOIN MES.SalesInvoice sih on sidd.invoicenumber = sih.documentnumber
INNER JOIN DIM.Product itm ON sidd.Product = itm.ProductReference
WHERE sidd.invoicedate>  dateadd(year,-1,getdate())
AND sidd.InvoicedQuantity>0
AND itm.productstatus <>'Obsolete'
Group by sidd.Product,sih.currency,sidd.SalesSite,sidd.BillToCustomer

)

,T70 AS(

SELECT
T70.Criteria1 'CustomerNumber'
,T70.Criteria2 'ProductNumber'
,AVG(T70.price) 'Price'
,T70.currency
,itm.Description1 'Product'
,PS.StockSite 'Site'
,bpc.BillToCustCategory 'Category'
,ISNULL(BG.BuyingGroup,'') 'GroupedBuyingGroup'
FROM (SELECT Criteria1
			,Criteria2
			,price
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode = 'T70' and getdate() BETWEEN validitystartdate AND validityenddate) T70
INNER JOIN DIM.Product itm ON itm.ProductReference = T70.Criteria2
LEFT JOIN [dbo].[ProductSite] PS ON  PS.Product = T70.Criteria2
INNER JOIN dim.Customer bpc ON bpc.customerNumber = T70.Criteria1
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
WHERE itm.productstatus <>'Obsolete'
group by T70.Criteria1,T70.Criteria2,T70.currency,itm.Description1,PS.StockSite,bpc.BillToCustCategory,BG.BuyingGroup

)

,T20 AS(

SELECT
bpc.BillToCustomer 'CustomerNumber'
,T20.Criteria1 'ProductNumber'
,T20.Criteria2 'Category'
,AVG(T20.price) 'Price'
,T20.currency
,itm.Description1 'Product'
,PS.StockSite 'Site'
,ISNULL(BG.BuyingGroup,'') 'GroupedBuyingGroup'
,itm.TaxLevel 'TaxLevel'
,bpc.TaxRule 'TaxRule'
FROM (SELECT Criteria1
			,Criteria2
			,price
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode = 'T20' and getdate() BETWEEN validitystartdate AND validityenddate) T20
INNER JOIN DIM.Product itm ON itm.ProductReference = T20.Criteria1
LEFT JOIN [dbo].[ProductSite] PS ON  PS.Product = T20.Criteria1
INNER JOIN dim.Customer bpc ON bpc.BillToCustCategory = T20.Criteria2
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
WHERE itm.productstatus <>'Obsolete'
AND NOT EXISTS (SELECT Criteria2 FROM dbo.SalesPriceList WHERE bpc.BillToCustomer = Criteria1 AND T20.Criteria1 =Criteria2 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND T20.currency=Currency)
group by bpc.BillToCustomer,T20.Criteria1,T20.Criteria2,T20.currency, itm.Description1, PS.StockSite,bpc.BillToCustCategory, BG.BuyingGroup,itm.TaxLevel
,bpc.TaxRule 


)

,T40T50 AS (

SELECT 
bpc.billtocustomer 'CustomerNumber'
,Itm.ProductReference 'ProductNumber'
,AVG(T40T50.ChargeDiscountValue) 'Discount'
FROM (SELECT Criteria1
			,Criteria2
			,Criteria3
			,ChargeDiscountValue
			FROM dbo.SalesPriceList      
			where PriceListCode in('T40','T50') AND getdate() BETWEEN validitystartdate AND validityenddate) T40T50
INNER JOIN DIM.Product itm ON itm.StatisticalGroup2 = T40T50.Criteria2 AND itm.StatisticalGroup3 = T40T50.Criteria3
INNER JOIN DIM.Customer bpc ON T40T50.Criteria1 = bpc.customernumber
WHERE itm.productstatus <>'Obsolete'
Group by bpc.billtocustomer, Itm.ProductReference

)



----T70 items------ T70 is excl. TAX

SELECT DISTINCT
T70.ProductNumber
,T70.CustomerNumber
,T70.Product
,T70.Site
,T70.Category
,T70.GroupedBuyingGroup
, 0 'Discount'
,T70.currency 'Currency'
,T70.Price 'PriceListPrice(ex.TAX)'
,T70.Price 'Discounted Price'
,CASE WHEN T70.Currency='GBP' THEN T70.Price
                              ELSE T70.Price/EX.InverseRate END 'Discounted Price GBP'
,sidd.NetPrice 'invoice price'
,sidd.DiscountChargeValue 'invoice discount'
,ISNULL(sidd.InvoicedQuantity,0) 'VolumeRollingYear'
,ISNULL(TQ.GroupQuant,0) 'GroupVolume'
,ISNULL(sidd.InvoicedQuantity/TQ.GroupQuant,0) 'PercentageOfGroup'
,'T70' 'Source'

FROM T70 T70
LEFT JOIN [dbo].[ExchangeRates] EX ON T70.currency = EX.SourceCurrency AND EX.LatestFlag=1 AND EX.Currency = 'GBP'
LEFT JOIN Invoiced sidd ON T70.ProductNumber =sidd.ProductNumber AND T70.CustomerNumber =sidd.BillToCustomer AND T70.Currency=sidd.Currency and sidd.Site = T70.Site
LEFT JOIN TotalQuant TQ ON T70.ProductNumber = TQ.ProductNumber AND T70.GroupedBuyingGroup = TQ.GroupedBuyingGroup AND T70.Category = TQ.Category AND T70.Site = TQ.Site

UNION

----------T20 items------T20 is incl. TAX so this is calcuated and taken away. discounts are applied pre-tax. 

SELECT DISTINCT
T20.ProductNumber
,T20.CustomerNumber
,T20.Product
,T20.Site
,T20.Category
,T20.GroupedBuyingGroup
,T40T50.Discount
,T20.currency
,T20.price/(1+(ISNULL(TRN.Rate,0)/100)) 'PriceListPrice (ex.TAX)'
,T20.price/(1+(ISNULL(TRN.Rate,0)/100))*(1-(ISNULL(T40T50.Discount,0)/100)) 'Discounted Price'
,CASE WHEN T20.Currency='GBP' THEN T20.price/(1+(ISNULL(TRN.Rate,0)/100))*(1-(ISNULL(T40T50.discount,0)/100)) 
                              ELSE (T20.price/(1+(ISNULL(TRN.Rate,0)/100))*(1-(ISNULL(T40T50.discount,0)/100)))/EX.InverseRate END 'Discounted Price GBP'
,sidd.NetPrice 'invoice price'
,sidd.DiscountChargeValue 'invoice discount'
,ISNULL(sidd.InvoicedQuantity,0) 'VolumeRollingYear'
,ISNULL(TQ.GroupQuant,0) 'GroupVolume'
,ISNULL(sidd.InvoicedQuantity/TQ.GroupQuant,0) 'PercentageOfGroup'
,'T20 & T40T50' 'Source'

FROM T20 T20
LEFT JOIN T40T50 T40T50 ON T40T50.CustomerNumber = T20.Customernumber AND T40T50.ProductNumber = T20.ProductNumber
LEFT JOIN dbo.TaxRates TRN ON T20.taxlevel=TRN.ProductTaxLevel AND T20.TaxRule=TRN.BPtaxRule AND TRN.[SITE]=T20.Site AND TRN.EnabledFlag='y'
LEFT JOIN [dbo].[ExchangeRates] EX ON T20.currency = EX.SourceCurrency AND EX.LatestFlag=1 AND EX.Currency = 'GBP'
LEFT JOIN Invoiced sidd ON T20.ProductNumber =sidd.ProductNumber AND T20.CustomerNumber =sidd.BillToCustomer AND T20.Currency=sidd.Currency and sidd.Site = T20.Site
LEFT JOIN TotalQuant TQ ON T20.ProductNumber = TQ.ProductNumber AND T20.GroupedBuyingGroup = TQ.GroupedBuyingGroup AND T20.Category = TQ.Category AND T20.Site = TQ.Site


--UNION

------------T20D items------Darlac

--SELECT
--itm.ProductReference 'SKU'
--,bpc.BillToCustomer 'CustomerNumber'
--,itm.Description1 'ItemDescription'
--,PS.StockSite 'Site'
--,bpc.BillToCustCategory 'Category'
--,bpc.StatisticalGroup3 'BuyingGroup'
--,BG.BuyingGroup 'GroupedBuyingGroup'
--,ISNULL(Sum(sidd.InvoicedQuantity),0) 'VolumeRollingYear'
--,ISNULL(MAX(TQ.TotalQuant),0) 'GroupVolume'
--,round(ISNULL(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),0),6) 'PercentageOfGroup'
--,0 'Discount' --no discount applied to trade price
--,tpl.currency 'Currency'
--,Min(tpl.price) 'PriceListPrice (ex.TAX)'
--,Min(tpl.price) 'Discounted Price'
--,CASE WHEN tpl.Currency='GBP' THEN Min(tpl.price)
--                              ELSE Min(tpl.price)/EX.InverseRate END 'Discounted Price GBP'

--,AVG(sidd.NetPrice) 'invoice price'
--,AVG(sidd.DiscountChargeValue) 'invoice discount'
--,'T20D' 'Source'


--FROM (SELECT Criteria2
--			,Criteria1
--			,min(price) price
--			,currency
--			FROM dbo.SalesPriceList      
--			where PriceListCode = 'T20D' AND getdate() BETWEEN validitystartdate AND validityenddate Group by Criteria2,Criteria1,currency ) tpl 

--INNER JOIN dim.Customer bpc ON bpc.StatisticalGroup4 = tpl.Criteria2
--INNER JOIN DIM.Product itm ON tpl.Criteria1 = itm.ProductReference
--LEFT JOIN [dbo].[ProductSite] PS ON tpl.Criteria1 = PS.Product 
--LEFT JOIN Invoiced sidd ON tpl.Criteria1 =sidd.Product AND bpc.BillToCustomer =sidd.BillToCustomer AND tpl.Currency=sidd.Currency and sidd.SalesSite = PS.StockSite
--LEFT JOIN [dbo].[ExchangeRates] EX ON tpl.currency = EX.SourceCurrency AND EX.LatestFlag=1 AND EX.Currency = 'GBP'
--LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
--LEFT JOIN TotalQuant TQ ON itm.ProductReference = TQ.Product AND isnull(BG.BuyingGroup,'') = ISNULL(TQ.BuyingGroup,'') AND bpc.BillToCustCategory = TQ.BillToCustCategory AND PS.StockSite = TQ.SalesSite

--WHERE itm.productstatus <>'Obsolete'
--AND NOT EXISTS (SELECT Criteria2 FROM dbo.SalesPriceList WHERE bpc.CustomerNumber = Criteria1 AND itm.ProductReference =Criteria2 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND tpl.currency=Currency)
--AND NOT EXISTS (SELECT Criteria1,CustomerNumber FROM RetailPrice WHERE itm.ProductReference = Criteria1 AND bpc.CustomerNumber = CustomerNumber  AND sidd.currency=Currency )
----and itm.ProductReference ='10002'

--group by itm.ProductReference
--,itm.Description1
--,PS.StockSite
--,bpc.BillToCustCategory
--,tpl.currency
--,bpc.BillToCustomer
--,bpc.StatisticalGroup3
--,BG.BuyingGroup
--,EX.InverseRate


--UNION

--------Non-Price list------ Invoices are excl. TAX

--SELECT distinct
--sidd.Product 'SKU'
--,sidd.BillToCustomer 'CustomerNuber'
--,itm.Description1 'ItemDescription'
--,sidd.SalesSite 'Site'
--,bpc.BillToCustCategory 'Category'
--,bpc.StatisticalGroup3 'BuyingGroup'
--,BG.BuyingGroup 'GroupedBuyingGroup'
--,Sum(sidd.InvoicedQuantity) 'VolumeRollingYear'
--,MAX(TQ.TotalQuant) 'GroupVolume'
--,round(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),6) 'PercentageOfGroup'
--,AVG(sidd.discountchargevalue) 'AverageDiscount'
--,sih.currency 'Currency'
--,AVG(sidd.GrossPriceCurr) 'PriceListPrice(ex.TAX)'
--,AVG(sidd.NetPriceCurr) 'Discounted Price'
--,AVG(sidd.NetPrice) 'Discounted Price GBP'
--,AVG(sidd.NetPrice) 'invoice price'
--,AVG(sidd.DiscountChargeValue) 'invoice discount'
--,'Non-pricelist' 'Source'

--FROM MES.SalesInvoiceDetail sidd
--INNER JOIN MES.SalesInvoice sih on sidd.invoicenumber = sih.documentnumber
--INNER JOIN DIM.Product itm ON sidd.Product = itm.ProductReference
--INNER JOIN dim.Customer bpc ON sidd.BillToCustomer = bpc.CustomerNumber
--LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
--LEFT JOIN TotalQuant TQ ON itm.ProductReference = TQ.Product AND isnull(BG.BuyingGroup,'') = ISNULL(TQ.BuyingGroup,'') AND bpc.BillToCustCategory = TQ.BillToCustCategory AND sidd.SalesSite = TQ.SalesSite

--WHERE sidd.invoicedate>  dateadd(year,-1,getdate())
--AND sidd.InvoicedQuantity>0
--AND itm.productstatus <>'Obsolete'
--AND NOT EXISTS (SELECT Criteria1,Criteria2 FROM dbo.SalesPriceList WHERE bpc.CustomerNumber = Criteria1 AND itm.ProductReference = Criteria2 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND sih.currency=Currency)
--AND NOT EXISTS (SELECT Criteria1,CustomerNumber FROM RetailPrice WHERE itm.ProductReference = Criteria1 AND bpc.CustomerNumber = CustomerNumber  AND sih.currency=Currency )
--AND NOT EXISTS (SELECT Criteria1,Criteria2 FROM dbo.SalesPriceList WHERE itm.ProductReference = Criteria1 AND bpc.StatisticalGroup4 = Criteria2 AND PriceListCode = 'T20D' AND getdate() BETWEEN validitystartdate AND validityenddate AND sih.currency=Currency)
----and itm.ProductReference ='10002'

--group by sidd.Product
--,itm.Description1
--,sidd.SalesSite
--,bpc.BillToCustCategory
--,sih.currency
--,sidd.BillToCustomer
--,bpc.StatisticalGroup3
--,BG.BuyingGroup



