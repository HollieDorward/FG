USE [PowerBIWarehouse]
GO
/****** Object:  StoredProcedure [ETL].[AvercastPriceDetail]    Script Date: 05/01/2024 09:09:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [ETL].[AvercastPriceDetail]
AS



WITH 

TotalQuant AS(
SELECT
SUM(sidd.InvoicedQuantity) 'TotalQuant'
,sidd.Product
,sidd.SalesSite
,bpc.BillToCustCategory
,BG.BuyingGroup

FROM MES.SalesInvoiceDetail sidd
LEFT JOIN dim.Customer bpc ON sidd.BillToCustomer = bpc.CustomerNumber
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
INNER JOIN DIM.Product itm ON sidd.Product = itm.ProductReference

WHERE sidd.invoicedate>  dateadd(year,-1,getdate())
AND sidd.InvoicedQuantity>0
AND itm.productstatus <>'Obsolete'

Group by
sidd.Product
,sidd.SalesSite
,bpc.BillToCustCategory
,BG.BuyingGroup

),

RetailPrice AS(

SELECT
rpl.Criteria2
,rpl.Criteria1
,bpc.CustomerNumber
,rpl.price
,rpl.currency

FROM (SELECT Criteria2
			,Criteria1
			,price
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode = 'T20' and getdate() BETWEEN validitystartdate AND validityenddate) rpl

INNER JOIN DIM.Product itm ON itm.ProductReference = rpl.Criteria1
INNER JOIN dim.Customer bpc ON bpc.BillToCustCategory = rpl.Criteria2

WHERE itm.productstatus <>'Obsolete'
AND NOT EXISTS (SELECT Criteria2 FROM dbo.SalesPriceList WHERE bpc.CustomerNumber = Criteria1 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND itm.ProductReference =Criteria2)

),

Invoiced AS(
SELECT
sidd.InvoicedQuantity 
,sidd.NetPrice
,sidd.DiscountChargeValue
,sidd.Product
,sih.currency
,sidd.SalesSite
,sidd.BillToCustomer
,sic.Soldto

FROM MES.SalesInvoiceDetail sidd
INNER JOIN MES.SalesInvoice sih on sidd.invoicenumber = sih.documentnumber
Left join [dbo].[CostingSalesInvoice] sic on sidd.invoicenumber = sic.invoicenumber
INNER JOIN dim.Customer bpc ON sidd.BillToCustomer = bpc.CustomerNumber
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
INNER JOIN DIM.Product itm ON sidd.Product = itm.ProductReference

WHERE sidd.invoicedate>  dateadd(year,-1,getdate())
AND sidd.InvoicedQuantity>0
AND itm.productstatus <>'Obsolete'

)



INSERT INTO [dbo].[AvercastPricesDetailTESTTable]


----T70 items------ T70 is excl. TAX

SELECT DISTINCT
itm.ProductReference 'SKU'
,bpc.CustomerNumber 'CustomerNumber'
,itm.Description1 'ItemDescription'
,PS.StockSite 'Site'
,bpc.BillToCustCategory 'Category'
,bpc.StatisticalGroup3 'BuyingGroup'
,BG.BuyingGroup 'GroupedBuyingGroup'
,ISNULL(Sum(sidd.InvoicedQuantity),0) 'VolumeRollingYear'
,ISNULL(MAX(TQ.TotalQuant),0) 'GroupVolume'
,round(ISNULL(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),0),6) 'PercentageOfGroup'
, 0 'Discount'
,spl.currency 'Currency'
,MIN(spl.price) 'PriceListPrice(ex.TAX)'
,MIN(spl.price) 'Discounted Price'
,CASE WHEN spl.Currency='GBP' THEN MIN(spl.price)
                              ELSE MIN(spl.price)/EX.InverseRate END 'Discounted Price GBP'
,AVG(sidd.NetPrice) 'invoice price'
,AVG(sidd.DiscountChargeValue) 'invoice discount'
,'T70' 'Source'

FROM (SELECT Criteria2
			,Criteria1
			,MIN(price) price
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate GROUP BY Criteria2,Criteria1,currency) spl

INNER JOIN DIM.Product itm ON spl.Criteria2 = itm.ProductReference
INNER JOIN dim.Customer bpc ON spl.Criteria1 = bpc.CustomerNumber
LEFT JOIN [dbo].[ProductSite] PS ON spl.Criteria2 = PS.Product
LEFT JOIN Invoiced sidd ON spl.Criteria2 =sidd.Product AND spl.Criteria1 =sidd.BillToCustomer AND spl.Currency=sidd.Currency and sidd.SalesSite = PS.StockSite
LEFT JOIN [dbo].[ExchangeRates] EX ON spl.currency = EX.SourceCurrency AND EX.LatestFlag=1 AND EX.Currency = 'GBP'
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
LEFT JOIN TotalQuant TQ ON itm.ProductReference = TQ.Product AND isnull(BG.BuyingGroup,'') = ISNULL(TQ.BuyingGroup,'') AND bpc.BillToCustCategory = TQ.BillToCustCategory AND PS.StockSite = TQ.SalesSite

WHERE itm.productstatus <>'Obsolete'
--and itm.ProductReference ='10002'

GROUP BY 
itm.ProductReference
,itm.Description1
,PS.StockSite
,bpc.BillToCustCategory
,spl.currency
,bpc.CustomerNumber
,bpc.StatisticalGroup3
,BG.BuyingGroup
,EX.InverseRate



UNION

----------T20 items------T20 is incl. TAX so this is calcuated and taken away. discounts are applied pre-tax. 

SELECT
itm.ProductReference 'SKU'
,bpc.BillToCustomer 'CustomerNumber'
,itm.Description1 'ItemDescription'
,PS.StockSite 'Site'
,bpc.BillToCustCategory 'Category'
,bpc.StatisticalGroup3 'BuyingGroup'
,BG.BuyingGroup 'GroupedBuyingGroup'
--,sidd.InvoicedQuantity 'invoice volume'
,ISNULL(Sum(sidd.InvoicedQuantity),0) 'VolumeRollingYear'
,ISNULL(MAX(TQ.TotalQuant),0) 'GroupVolume'
,round(ISNULL(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),0),6) 'PercentageOfGroup'
,ISNULL(dpl.discount,0) 'Discount'
,rpl.currency 'Currency'
,Min(rpl.price)/(1+(ISNULL(TRN.Rate,0)/100)) 'PriceListPrice (ex.TAX)'
,Min(rpl.price)/(1+(ISNULL(TRN.Rate,0)/100))*(1-(ISNULL(dpl.discount,0)/100)) 'Discounted Price'
,CASE WHEN rpl.Currency='GBP' THEN Min(rpl.price)/(1+(ISNULL(TRN.Rate,0)/100))*(1-(ISNULL(dpl.discount,0)/100)) 
                              ELSE (Min(rpl.price)/(1+(ISNULL(TRN.Rate,0)/100))*(1-(ISNULL(dpl.discount,0)/100)))/EX.InverseRate END 'Discounted Price GBP'

,AVG(sidd.NetPrice) 'invoice price'
,AVG(sidd.DiscountChargeValue) 'invoice discount'
,'T20 & T40/50' 'Source'


FROM (SELECT Criteria2
			,Criteria1
			,min(price) price
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode = 'T20' AND getdate() BETWEEN validitystartdate AND validityenddate Group by Criteria2,Criteria1,currency ) rpl 

INNER JOIN dim.Customer bpc ON bpc.BillToCustCategory = rpl.Criteria2
INNER JOIN DIM.Product itm ON rpl.Criteria1 = itm.ProductReference

LEFT JOIN (SELECT Criteria2
			,Criteria1
			,Criteria3
			,max(ChargeDiscountValue) discount
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode in('T40','T50') AND getdate() BETWEEN validitystartdate AND validityenddate Group by Criteria2,Criteria1,criteria3,currency ) dpl ON bpc.CustomerNumber = dpl.Criteria1 AND itm.StatisticalGroup2 = dpl.Criteria2 AND itm.StatisticalGroup3 = dpl.Criteria3

LEFT JOIN [dbo].[ProductSite] PS ON rpl.Criteria1 = PS.Product 
LEFT JOIN Invoiced sidd ON rpl.Criteria1 =sidd.Product AND bpc.CustomerNumber =sidd.SoldTo AND rpl.Currency=sidd.Currency and sidd.SalesSite = PS.StockSite
LEFT JOIN dbo.TaxRates TRN ON itm.taxlevel=TRN.ProductTaxLevel AND bpc.TaxRule=TRN.BPtaxRule AND TRN.[SITE]=sidd.SalesSite AND TRN.EnabledFlag='y'
LEFT JOIN [dbo].[ExchangeRates] EX ON rpl.currency = EX.SourceCurrency AND EX.LatestFlag=1 AND EX.Currency = 'GBP'
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
LEFT JOIN TotalQuant TQ ON itm.ProductReference = TQ.Product AND isnull(BG.BuyingGroup,'') = ISNULL(TQ.BuyingGroup,'') AND bpc.BillToCustCategory = TQ.BillToCustCategory AND PS.StockSite = TQ.SalesSite

WHERE itm.productstatus <>'Obsolete'
AND NOT EXISTS (SELECT Criteria2 FROM dbo.SalesPriceList WHERE bpc.CustomerNumber = Criteria1 AND itm.ProductReference =Criteria2 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND rpl.currency=Currency)
--and itm.ProductReference ='10002'

group by itm.ProductReference
,itm.Description1
,PS.StockSite
,bpc.BillToCustCategory
,rpl.currency
,TRN.Rate
,bpc.BillToCustomer
,bpc.StatisticalGroup3
,BG.BuyingGroup
,EX.InverseRate
,dpl.discount

--having ISNULL(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),0)>1


UNION

----------T20D items------Darlac

SELECT
itm.ProductReference 'SKU'
,bpc.BillToCustomer 'CustomerNumber'
,itm.Description1 'ItemDescription'
,PS.StockSite 'Site'
,bpc.BillToCustCategory 'Category'
,bpc.StatisticalGroup3 'BuyingGroup'
,BG.BuyingGroup 'GroupedBuyingGroup'
,ISNULL(Sum(sidd.InvoicedQuantity),0) 'VolumeRollingYear'
,ISNULL(MAX(TQ.TotalQuant),0) 'GroupVolume'
,round(ISNULL(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),0),6) 'PercentageOfGroup'
,0 'Discount' --no discount applied to trade price
,tpl.currency 'Currency'
,Min(tpl.price) 'PriceListPrice (ex.TAX)'
,Min(tpl.price) 'Discounted Price'
,CASE WHEN tpl.Currency='GBP' THEN Min(tpl.price)
                              ELSE Min(tpl.price)/EX.InverseRate END 'Discounted Price GBP'

,AVG(sidd.NetPrice) 'invoice price'
,AVG(sidd.DiscountChargeValue) 'invoice discount'
,'T20D' 'Source'


FROM (SELECT Criteria2
			,Criteria1
			,min(price) price
			,currency
			FROM dbo.SalesPriceList      
			where PriceListCode = 'T20D' AND getdate() BETWEEN validitystartdate AND validityenddate Group by Criteria2,Criteria1,currency ) tpl 

INNER JOIN dim.Customer bpc ON bpc.StatisticalGroup4 = tpl.Criteria2
INNER JOIN DIM.Product itm ON tpl.Criteria1 = itm.ProductReference
LEFT JOIN [dbo].[ProductSite] PS ON tpl.Criteria1 = PS.Product 
LEFT JOIN Invoiced sidd ON tpl.Criteria1 =sidd.Product AND bpc.BillToCustomer =sidd.BillToCustomer AND tpl.Currency=sidd.Currency and sidd.SalesSite = PS.StockSite
LEFT JOIN [dbo].[ExchangeRates] EX ON tpl.currency = EX.SourceCurrency AND EX.LatestFlag=1 AND EX.Currency = 'GBP'
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
LEFT JOIN TotalQuant TQ ON itm.ProductReference = TQ.Product AND isnull(BG.BuyingGroup,'') = ISNULL(TQ.BuyingGroup,'') AND bpc.BillToCustCategory = TQ.BillToCustCategory AND PS.StockSite = TQ.SalesSite

WHERE itm.productstatus <>'Obsolete'
AND NOT EXISTS (SELECT Criteria2 FROM dbo.SalesPriceList WHERE bpc.CustomerNumber = Criteria1 AND itm.ProductReference =Criteria2 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND tpl.currency=Currency)
AND NOT EXISTS (SELECT Criteria1,CustomerNumber FROM RetailPrice WHERE itm.ProductReference = Criteria1 AND bpc.CustomerNumber = CustomerNumber  AND sidd.currency=Currency )
--and itm.ProductReference ='10002'

group by itm.ProductReference
,itm.Description1
,PS.StockSite
,bpc.BillToCustCategory
,tpl.currency
,bpc.BillToCustomer
,bpc.StatisticalGroup3
,BG.BuyingGroup
,EX.InverseRate


UNION

------Non-Price list------ Invoices are excl. TAX

SELECT distinct
sidd.Product 'SKU'
,sidd.BillToCustomer 'CustomerNuber'
,itm.Description1 'ItemDescription'
,sidd.SalesSite 'Site'
,bpc.BillToCustCategory 'Category'
,bpc.StatisticalGroup3 'BuyingGroup'
,BG.BuyingGroup 'GroupedBuyingGroup'
,Sum(sidd.InvoicedQuantity) 'VolumeRollingYear'
,MAX(TQ.TotalQuant) 'GroupVolume'
,round(Sum(sidd.InvoicedQuantity)/MAX(TQ.TotalQuant),6) 'PercentageOfGroup'
,AVG(sidd.discountchargevalue) 'AverageDiscount'
,sih.currency 'Currency'
,AVG(sidd.GrossPriceCurr) 'PriceListPrice(ex.TAX)'
,AVG(sidd.NetPriceCurr) 'Discounted Price'
,AVG(sidd.NetPrice) 'Discounted Price GBP'
,AVG(sidd.NetPrice) 'invoice price'
,AVG(sidd.DiscountChargeValue) 'invoice discount'
,'Non-pricelist' 'Source'

FROM MES.SalesInvoiceDetail sidd
INNER JOIN MES.SalesInvoice sih on sidd.invoicenumber = sih.documentnumber
INNER JOIN DIM.Product itm ON sidd.Product = itm.ProductReference
INNER JOIN dim.Customer bpc ON sidd.BillToCustomer = bpc.CustomerNumber
LEFT JOIN [dbo].[MainBuyingGroup] BG ON bpc.StatisticalGroup3 = BG.BuyingGroup
LEFT JOIN TotalQuant TQ ON itm.ProductReference = TQ.Product AND isnull(BG.BuyingGroup,'') = ISNULL(TQ.BuyingGroup,'') AND bpc.BillToCustCategory = TQ.BillToCustCategory AND sidd.SalesSite = TQ.SalesSite

WHERE sidd.invoicedate>  dateadd(year,-1,getdate())
AND sidd.InvoicedQuantity>0
AND itm.productstatus <>'Obsolete'
AND NOT EXISTS (SELECT Criteria1,Criteria2 FROM dbo.SalesPriceList WHERE bpc.CustomerNumber = Criteria1 AND itm.ProductReference = Criteria2 AND PriceListCode = 'T70' AND getdate() BETWEEN validitystartdate AND validityenddate AND sih.currency=Currency)
AND NOT EXISTS (SELECT Criteria1,CustomerNumber FROM RetailPrice WHERE itm.ProductReference = Criteria1 AND bpc.CustomerNumber = CustomerNumber  AND sih.currency=Currency )
AND NOT EXISTS (SELECT Criteria1,Criteria2 FROM dbo.SalesPriceList WHERE itm.ProductReference = Criteria1 AND bpc.StatisticalGroup4 = Criteria2 AND PriceListCode = 'T20D' AND getdate() BETWEEN validitystartdate AND validityenddate AND sih.currency=Currency)
--and itm.ProductReference ='10002'

group by sidd.Product
,itm.Description1
,sidd.SalesSite
,bpc.BillToCustCategory
,sih.currency
,sidd.BillToCustomer
,bpc.StatisticalGroup3
,BG.BuyingGroup



